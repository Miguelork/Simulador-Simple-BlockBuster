/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import logica.Manager;
import modelos.Pelicula;
import modelos.Usuario;

/**
 * @author Lants
 */
public class Tienda extends javax.swing.JFrame {

    String buscaPor = "";
    public Usuario selected;
    Manager manage = new Manager();
    DefaultTableModel tablaResult;
    DefaultTableModel tablaRented;

    /**
     * Creates new form Tienda
     */
    public Tienda() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        tablaResult = new DefaultTableModel();
        tablaResult.addColumn("Codigo");
        tablaResult.addColumn("Titulo");
        tablaResult.addColumn("Costo");
        tablaResult.addColumn("Alquilado por");
        this.tableResq.setModel(tablaResult);
        tablaRented = new DefaultTableModel();
        tablaRented.addColumn("Codigo");
        tablaRented.addColumn("Titulo");
        tablaRented.addColumn("Costo");
        tablaRented.addColumn("Alquilado por");
        this.tableRent.setModel(tablaRented);
        manage.cargarPeliculas();
        this.actualizarT(manage.listPeli);
    }

    public Tienda(Usuario selected) {
        initComponents();
        this.selected = selected;
        this.textcost1.setText(Integer.toString(selected.getNumSocio()));
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        tablaResult = new DefaultTableModel();
        tablaResult.addColumn("Codigo");
        tablaResult.addColumn("Titulo");
        tablaResult.addColumn("Costo");
        tablaResult.addColumn("Alquilado por");
        this.tableResq.setModel(tablaResult);
        tablaRented = new DefaultTableModel();
        tablaRented.addColumn("Codigo");
        tablaRented.addColumn("Titulo");
        tablaRented.addColumn("Costo");
        tablaRented.addColumn("Alquilado por");
        this.tableRent.setModel(tablaRented);
        manage.cargarPeliculas();
        manage.refreshIndex();
        this.actualizarT(manage.listPeli);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableRent = new javax.swing.JTable();
        btnDevol = new javax.swing.JButton();
        btnConsultar = new javax.swing.JButton();
        btnAlquilar1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableResq = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        combobox = new javax.swing.JComboBox();
        txtABuscar = new javax.swing.JTextField();
        textcost1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(41, 49, 51));

        tableRent.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tableRent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Title", "Cost", "Rented by"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableRent);

        btnDevol.setBackground(new java.awt.Color(41, 49, 51));
        btnDevol.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnDevol.setForeground(new java.awt.Color(245, 245, 245));
        btnDevol.setText("Devolver Pelicula");
        btnDevol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDevolActionPerformed(evt);
            }
        });

        btnConsultar.setBackground(new java.awt.Color(41, 49, 51));
        btnConsultar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnConsultar.setForeground(new java.awt.Color(245, 245, 245));
        btnConsultar.setText("Consultar Peliculas");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        btnAlquilar1.setBackground(new java.awt.Color(41, 49, 51));
        btnAlquilar1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnAlquilar1.setForeground(new java.awt.Color(245, 245, 245));
        btnAlquilar1.setText("Alquilar Pelicula");
        btnAlquilar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlquilar1ActionPerformed(evt);
            }
        });

        tableResq.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tableResq.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Title", "Cost", "Rented by"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tableResq);

        jLabel6.setFont(new java.awt.Font("Magneto", 1, 54)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(245, 245, 245));
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/image (1) (1).png"))); // NOI18N
        jLabel6.setToolTipText("");

        jLabel5.setFont(new java.awt.Font("Magneto", 1, 54)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(245, 245, 245));
        jLabel5.setText("Retro Club");
        jLabel5.setToolTipText("");

        jLabel7.setFont(new java.awt.Font("Magneto", 1, 54)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(245, 245, 245));
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/image (4).png"))); // NOI18N
        jLabel7.setToolTipText("");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        combobox.setBackground(new java.awt.Color(41, 49, 51));
        combobox.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        combobox.setForeground(new java.awt.Color(245, 245, 245));
        combobox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Buscar por", "Titulo", "Codigo" }));
        combobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboboxActionPerformed(evt);
            }
        });

        txtABuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtABuscarActionPerformed(evt);
            }
        });

        textcost1.setBackground(new java.awt.Color(51, 51, 51));
        textcost1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        textcost1.setForeground(new java.awt.Color(255, 255, 255));
        textcost1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textcost1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textcost1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(245, 245, 245));
        jLabel2.setText("#");
        jLabel2.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 820, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(174, 174, 174)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 820, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(41, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnDevol, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(252, 252, 252)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textcost1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtABuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(171, 171, 171))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAlquilar1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(374, 374, 374))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel6)
                        .addComponent(jLabel5)))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtABuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnAlquilar1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDevol, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textcost1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        if (!(buscaPor == "") && !(buscaPor == "Buscar por")) {
            if (!(txtABuscar.getText().equals(""))) {
                int cantidadfilas = tableResq.getRowCount();
                for (int i = cantidadfilas - 1; i >= 0; i--) {
                    tablaResult.removeRow(i);
                }
                Pelicula aux;
                String[] Data = new String[4];
                switch (buscaPor) {
                    case "Titulo":
                        if (manage.buscarPorTitulo(txtABuscar.getText()) == null) {
                            JOptionPane.showMessageDialog(null, "Su busqueda no ha dado resultado", "No encontrado", JOptionPane.WARNING_MESSAGE);
                        } else {
                            aux = manage.buscarPorTitulo(txtABuscar.getText());
                            Data[0] = String.valueOf(aux.getCode());
                            Data[1] = aux.getTitle();
                            Data[2] = String.valueOf(aux.getCost());
                            if (aux.getNumSocio() == 0) {
                                Data[3] = "No ha sido alquilado";
                            } else {
                                Data[3] = String.valueOf(aux.getNumSocio());
                            }
                            tablaResult.addRow(Data);
                        }
                        break;
                    case "Codigo":
                        if (manage.buscarPorCodigo(Integer.parseInt(txtABuscar.getText())) == null) {
                            JOptionPane.showMessageDialog(null, "Su busqueda no ha dado resultado", "No encontrado", JOptionPane.WARNING_MESSAGE);
                        } else {
                            aux = manage.buscarPorCodigo(Integer.parseInt(txtABuscar.getText()));
                            Data[0] = String.valueOf(aux.getCode());
                            Data[1] = aux.getTitle();
                            Data[2] = String.valueOf(aux.getCost());
                            if (aux.getNumSocio() == 0) {
                                Data[3] = "No ha sido alquilado";
                            } else {
                                Data[3] = String.valueOf(aux.getNumSocio());
                            }
                            tablaResult.addRow(Data);
                        }
                        break;
                    default:
                        break;
                }
            } else {
                JOptionPane.showMessageDialog(null, "No ha llenado el dato ha buscar \nVerifique e intente nuevamente", "Llenar dato de Busqueda", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "No ha seleccionado parametro para su busqueda \nVerifique e intente nuevamente", "Seleccionar Parametro", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnConsultarActionPerformed

    public void actualizarT(ArrayList<Pelicula> a) {

        //Resetear valores
        int cantidadfilas = tableRent.getRowCount();
        for (int i = cantidadfilas - 1; i >= 0; i--) {
            tablaRented.removeRow(i);
        }

        //Cargar valores
        for (Pelicula peli : a) {
            String[] Data = new String[5];
            Data[0] = String.valueOf(peli.getCode());
            Data[1] = peli.getTitle();
            Data[2] = String.valueOf(peli.getCost());
            if (peli.getNumSocio() == 0) {
                Data[3] = "No ha sido alquilado";
            } else {
                Data[3] = String.valueOf(peli.getNumSocio());
            }
            Data[4] = String.valueOf(peli.isBitMuerto());
            if (selected.getNumSocio() == peli.getNumSocio()) {
                tablaRented.addRow(Data);
            }
        }
    }

    private void btnAlquilar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlquilar1ActionPerformed
        int rowSelect = tableResq.getSelectedRow();
        String chuwiki = "No ha sido alquilado";
        if (chuwiki.equals((String) tableResq.getValueAt(rowSelect, 3))) {
            String movie = (String) tableResq.getValueAt(rowSelect, 1);
            int aux = manage.obtenerIndex(movie);
            if (rowSelect >= 0) {
                manage.marcaParaAlquilar(aux, this.selected.getNumSocio());
                this.actualizarT(manage.listPeli);
            } else {
                JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna fila \nVerifique e intente nuevamente", "Señalar fila", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Esta pelicula se encuentra alquilada", "Operación Invalida", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnAlquilar1ActionPerformed

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        Administrador admin = new Administrador(selected);
        admin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel7MouseClicked

    private void comboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboboxActionPerformed
        buscaPor = combobox.getSelectedItem().toString();
    }//GEN-LAST:event_comboboxActionPerformed

    private void txtABuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtABuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtABuscarActionPerformed

    private void textcost1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textcost1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textcost1ActionPerformed

    private void btnDevolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDevolActionPerformed
        int rowSelect = tableRent.getSelectedRow();
        String movie = (String) tableRent.getValueAt(rowSelect, 1);
        int aux = manage.obtenerIndex(movie);
        if (rowSelect >= 0) {
            manage.marcaParaDevolver(aux);
            this.actualizarT(manage.listPeli);
        } else {
            JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna fila \nVerifique e intente nuevamente", "Señalar fila", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnDevolActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tienda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlquilar1;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnDevol;
    private javax.swing.JComboBox combobox;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tableRent;
    private javax.swing.JTable tableResq;
    private javax.swing.JTextField textcost1;
    private javax.swing.JTextField txtABuscar;
    // End of variables declaration//GEN-END:variables
}
